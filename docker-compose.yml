version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: ungdungxemphim-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${DB_PASSWORD:-YourStrong@Password123}
    ports:
      - "1433:1433"
    volumes:
      - sqlserver-data:/var/opt/mssql
    networks:
      - ungdungxemphim-network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./Backend/UngDungXemPhim.API
      dockerfile: Dockerfile
    container_name: ungdungxemphim-backend
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - DB_SERVER=${DB_SERVER:-sqlserver}
      - DB_NAME=${DB_NAME:-UngDungXemPhim_v2}
      - DB_USER=${DB_USER:-sa}
      - DB_PASSWORD=${DB_PASSWORD:-YourStrong@Password123}
      - DB_TRUST_CERTIFICATE=${DB_TRUST_CERTIFICATE:-True}
      - API_PORT=${API_PORT:-5016}
      - API_HOST=${API_HOST:-0.0.0.0}
      - ASSET_BASE_URL=${ASSET_BASE_URL}
    ports:
      - "${API_PORT:-5016}:${API_PORT:-5016}"
    volumes:
      - ./Backend/Asset:/app/Asset
    depends_on:
      - sqlserver
    networks:
      - ungdungxemphim-network
    restart: unless-stopped

volumes:
  sqlserver-data:

networks:
  ungdungxemphim-network:
    driver: bridge
